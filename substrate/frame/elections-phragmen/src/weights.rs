//! Autogenerated weights for pallet_elections_phragmen
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-04-10, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// ./target/release/dock-node
// benchmark
// pallet
// --wasm-execution=compiled
// --pallet=pallet_elections_phragmen
// --extra
// --repeat=20
// --extrinsic=*
// --steps=50
// --template=node/module-weight-template.hbs
// --output=./tmp

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_elections_phragmen.
pub trait WeightInfo {
    fn vote_equal(v: u32) -> Weight;
    fn vote_more(v: u32) -> Weight;
    fn vote_less(v: u32) -> Weight;
    fn remove_voter() -> Weight;
    fn submit_candidacy(c: u32) -> Weight;
    fn approve_candidacy() -> Weight;
    fn disapprove_candidacy() -> Weight;
    fn renounce_candidacy_candidate(c: u32) -> Weight;
    fn renounce_candidacy_members() -> Weight;
    fn renounce_candidacy_runners_up() -> Weight;
    fn remove_member_without_replacement() -> Weight;
    fn remove_member_with_replacement() -> Weight;
    fn clean_defunct_voters(v: u32, d: u32) -> Weight;
    fn election_phragmen(c: u32, v: u32, e: u32) -> Weight;
    fn election_phragmen_c_e(c: u32, e: u32) -> Weight;
    fn election_phragmen_v(v: u32) -> Weight;
}

/// Weights for pallet_elections_phragmen using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
    fn vote_equal(_v: u32) -> Weight {
        Weight::from_ref_time(26_184_000)
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    fn vote_more(v: u32) -> Weight {
        Weight::from_ref_time(31_243_000) // Standard Error: 7_000
            .saturating_add(Weight::from_ref_time(121_000).saturating_mul(v as u64))
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    fn vote_less(v: u32) -> Weight {
        Weight::from_ref_time(31_556_000) // Standard Error: 9_000
            .saturating_add(Weight::from_ref_time(133_000).saturating_mul(v as u64))
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    fn remove_voter() -> Weight {
        Weight::from_ref_time(30_000_000)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    fn submit_candidacy(c: u32) -> Weight {
        Weight::from_ref_time(29_742_000) // Standard Error: 1_000
            .saturating_add(Weight::from_ref_time(87_000).saturating_mul(c as u64))
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    fn approve_candidacy() -> Weight {
        Weight::from_ref_time(7_000_000)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    fn disapprove_candidacy() -> Weight {
        Weight::from_ref_time(7_000_000)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    fn renounce_candidacy_candidate(c: u32) -> Weight {
        Weight::from_ref_time(24_084_000) // Standard Error: 1_000
            .saturating_add(Weight::from_ref_time(63_000).saturating_mul(c as u64))
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    fn renounce_candidacy_members() -> Weight {
        Weight::from_ref_time(36_000_000)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    fn renounce_candidacy_runners_up() -> Weight {
        Weight::from_ref_time(29_000_000)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    fn remove_member_without_replacement() -> Weight {
        Weight::from_ref_time(1_000_000_000_000)
    }
    fn remove_member_with_replacement() -> Weight {
        Weight::from_ref_time(38_000_000)
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(5))
    }
    fn clean_defunct_voters(v: u32, _d: u32) -> Weight {
        Weight::from_ref_time(303_135_000) // Standard Error: 239_000
            .saturating_add(Weight::from_ref_time(29_141_000).saturating_mul(v as u64))
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().reads((3 as u64).saturating_mul(v as u64)))
            .saturating_add(T::DbWeight::get().writes((3 as u64).saturating_mul(v as u64)))
    }
    fn election_phragmen(c: u32, v: u32, e: u32) -> Weight {
        Weight::from_ref_time(0) // Standard Error: 275_000
            .saturating_add(Weight::from_ref_time(3_751_000).saturating_mul(c as u64)) // Standard Error: 68_000
            .saturating_add(Weight::from_ref_time(9_459_000).saturating_mul(v as u64)) // Standard Error: 4_000
            .saturating_add(Weight::from_ref_time(191_000).saturating_mul(e as u64))
            .saturating_add(T::DbWeight::get().reads(116))
            .saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(c as u64)))
            .saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(v as u64)))
            .saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(c as u64)))
    }
    fn election_phragmen_c_e(c: u32, e: u32) -> Weight {
        Weight::from_ref_time(5_386_658_000) // Standard Error: 288_000
            .saturating_add(Weight::from_ref_time(7_112_000).saturating_mul(c as u64)) // Standard Error: 4_000
            .saturating_add(Weight::from_ref_time(151_000).saturating_mul(e as u64))
            .saturating_add(T::DbWeight::get().reads(798))
            .saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(c as u64)))
            .saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(c as u64)))
    }
    fn election_phragmen_v(v: u32) -> Weight {
        Weight::from_ref_time(241_417_000) // Standard Error: 75_000
            .saturating_add(Weight::from_ref_time(6_432_000).saturating_mul(v as u64))
            .saturating_add(T::DbWeight::get().reads(37))
            .saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(v as u64)))
            .saturating_add(T::DbWeight::get().writes(17))
    }
}

// For backwards compatibility and tests
impl WeightInfo for () {
    fn vote_equal(_v: u32) -> Weight {
        Weight::from_ref_time(26_184_000)
            .saturating_add(RocksDbWeight::get().reads(5))
            .saturating_add(RocksDbWeight::get().writes(2))
    }
    fn vote_more(v: u32) -> Weight {
        Weight::from_ref_time(31_243_000) // Standard Error: 7_000
            .saturating_add(Weight::from_ref_time(121_000).saturating_mul(v as u64))
            .saturating_add(RocksDbWeight::get().reads(5))
            .saturating_add(RocksDbWeight::get().writes(2))
    }
    fn vote_less(v: u32) -> Weight {
        Weight::from_ref_time(31_556_000) // Standard Error: 9_000
            .saturating_add(Weight::from_ref_time(133_000).saturating_mul(v as u64))
            .saturating_add(RocksDbWeight::get().reads(5))
            .saturating_add(RocksDbWeight::get().writes(2))
    }
    fn remove_voter() -> Weight {
        Weight::from_ref_time(30_000_000)
            .saturating_add(RocksDbWeight::get().reads(2))
            .saturating_add(RocksDbWeight::get().writes(2))
    }
    fn submit_candidacy(c: u32) -> Weight {
        Weight::from_ref_time(29_742_000) // Standard Error: 1_000
            .saturating_add(Weight::from_ref_time(87_000).saturating_mul(c as u64))
            .saturating_add(RocksDbWeight::get().reads(4))
            .saturating_add(RocksDbWeight::get().writes(1))
    }
    fn approve_candidacy() -> Weight {
        Weight::from_ref_time(7_000_000)
            .saturating_add(RocksDbWeight::get().reads(1))
            .saturating_add(RocksDbWeight::get().writes(1))
    }
    fn disapprove_candidacy() -> Weight {
        Weight::from_ref_time(7_000_000)
            .saturating_add(RocksDbWeight::get().reads(1))
            .saturating_add(RocksDbWeight::get().writes(1))
    }
    fn renounce_candidacy_candidate(c: u32) -> Weight {
        Weight::from_ref_time(24_084_000) // Standard Error: 1_000
            .saturating_add(Weight::from_ref_time(63_000).saturating_mul(c as u64))
            .saturating_add(RocksDbWeight::get().reads(1))
            .saturating_add(RocksDbWeight::get().writes(1))
    }
    fn renounce_candidacy_members() -> Weight {
        Weight::from_ref_time(36_000_000)
            .saturating_add(RocksDbWeight::get().reads(4))
            .saturating_add(RocksDbWeight::get().writes(4))
    }
    fn renounce_candidacy_runners_up() -> Weight {
        Weight::from_ref_time(29_000_000)
            .saturating_add(RocksDbWeight::get().reads(1))
            .saturating_add(RocksDbWeight::get().writes(1))
    }
    fn remove_member_without_replacement() -> Weight {
        Weight::from_ref_time(1_000_000_000_000)
    }
    fn remove_member_with_replacement() -> Weight {
        Weight::from_ref_time(38_000_000)
            .saturating_add(RocksDbWeight::get().reads(5))
            .saturating_add(RocksDbWeight::get().writes(5))
    }
    fn clean_defunct_voters(v: u32, _d: u32) -> Weight {
        Weight::from_ref_time(303_135_000) // Standard Error: 239_000
            .saturating_add(Weight::from_ref_time(29_141_000).saturating_mul(v as u64))
            .saturating_add(RocksDbWeight::get().reads(4))
            .saturating_add(RocksDbWeight::get().reads((3 as u64).saturating_mul(v as u64)))
            .saturating_add(RocksDbWeight::get().writes((3 as u64).saturating_mul(v as u64)))
    }
    fn election_phragmen(c: u32, v: u32, e: u32) -> Weight {
        Weight::from_ref_time(0) // Standard Error: 275_000
            .saturating_add(Weight::from_ref_time(3_751_000).saturating_mul(c as u64)) // Standard Error: 68_000
            .saturating_add(Weight::from_ref_time(9_459_000).saturating_mul(v as u64)) // Standard Error: 4_000
            .saturating_add(Weight::from_ref_time(191_000).saturating_mul(e as u64))
            .saturating_add(RocksDbWeight::get().reads(116))
            .saturating_add(RocksDbWeight::get().reads((1 as u64).saturating_mul(c as u64)))
            .saturating_add(RocksDbWeight::get().reads((1 as u64).saturating_mul(v as u64)))
            .saturating_add(RocksDbWeight::get().writes((1 as u64).saturating_mul(c as u64)))
    }
    fn election_phragmen_c_e(c: u32, e: u32) -> Weight {
        Weight::from_ref_time(5_386_658_000) // Standard Error: 288_000
            .saturating_add(Weight::from_ref_time(7_112_000).saturating_mul(c as u64)) // Standard Error: 4_000
            .saturating_add(Weight::from_ref_time(151_000).saturating_mul(e as u64))
            .saturating_add(RocksDbWeight::get().reads(798))
            .saturating_add(RocksDbWeight::get().reads((1 as u64).saturating_mul(c as u64)))
            .saturating_add(RocksDbWeight::get().writes((1 as u64).saturating_mul(c as u64)))
    }
    fn election_phragmen_v(v: u32) -> Weight {
        Weight::from_ref_time(241_417_000) // Standard Error: 75_000
            .saturating_add(Weight::from_ref_time(6_432_000).saturating_mul(v as u64))
            .saturating_add(RocksDbWeight::get().reads(37))
            .saturating_add(RocksDbWeight::get().reads((1 as u64).saturating_mul(v as u64)))
            .saturating_add(RocksDbWeight::get().writes(17))
    }
}
