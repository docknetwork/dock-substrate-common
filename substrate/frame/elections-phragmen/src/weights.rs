//! Autogenerated weights for pallet_elections_phragmen
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-04-12, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// ./target/release/dock-node
// benchmark
// pallet
// --wasm-execution=compiled
// --pallet=pallet_elections_phragmen
// --extra
// --repeat=20
// --extrinsic=*
// --steps=50
// --template=node/module-weight-template.hbs
// --output=./tmp

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_elections_phragmen.
pub trait WeightInfo {
    fn vote_equal(v: u32) -> Weight;
    fn vote_more(v: u32) -> Weight;
    fn vote_less(v: u32) -> Weight;
    fn remove_voter() -> Weight;
    fn submit_candidacy(c: u32) -> Weight;
    fn renounce_candidacy_candidate(c: u32) -> Weight;
    fn renounce_candidacy_members() -> Weight;
    fn renounce_candidacy_runners_up() -> Weight;
    fn remove_member_without_replacement() -> Weight;
    fn remove_member_with_replacement() -> Weight;
    fn clean_defunct_voters(v: u32, d: u32) -> Weight;
    fn election_phragmen(c: u32, v: u32, e: u32) -> Weight;
    fn election_phragmen_c_e(c: u32, e: u32) -> Weight;
    fn election_phragmen_v(v: u32) -> Weight;
}

/// Weights for pallet_elections_phragmen using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
    fn vote_equal(v: u32) -> Weight {
        Weight::from_ref_time(24_712_000) // Standard Error: 6_000
            .saturating_add(Weight::from_ref_time(78_000).saturating_mul(v as u64))
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    fn vote_more(v: u32) -> Weight {
        Weight::from_ref_time(31_266_000) // Standard Error: 9_000
            .saturating_add(Weight::from_ref_time(103_000).saturating_mul(v as u64))
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    fn vote_less(v: u32) -> Weight {
        Weight::from_ref_time(30_689_000) // Standard Error: 6_000
            .saturating_add(Weight::from_ref_time(169_000).saturating_mul(v as u64))
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    fn remove_voter() -> Weight {
        Weight::from_ref_time(30_000_000)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    fn submit_candidacy(c: u32) -> Weight {
        Weight::from_ref_time(26_966_000) // Standard Error: 4_000
            .saturating_add(Weight::from_ref_time(179_000).saturating_mul(c as u64))
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    fn renounce_candidacy_candidate(c: u32) -> Weight {
        Weight::from_ref_time(27_349_000) // Standard Error: 2_000
            .saturating_add(Weight::from_ref_time(54_000).saturating_mul(c as u64))
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    fn renounce_candidacy_members() -> Weight {
        Weight::from_ref_time(33_000_000)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    fn renounce_candidacy_runners_up() -> Weight {
        Weight::from_ref_time(25_000_000)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    fn remove_member_without_replacement() -> Weight {
        Weight::from_ref_time(1_000_000_000_000)
    }
    fn remove_member_with_replacement() -> Weight {
        Weight::from_ref_time(39_000_000)
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(5))
    }
    fn clean_defunct_voters(v: u32, _d: u32) -> Weight {
        Weight::from_ref_time(0) // Standard Error: 231_000
            .saturating_add(Weight::from_ref_time(30_349_000).saturating_mul(v as u64))
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().reads((3 as u64).saturating_mul(v as u64)))
            .saturating_add(T::DbWeight::get().writes((3 as u64).saturating_mul(v as u64)))
    }
    fn election_phragmen(c: u32, v: u32, e: u32) -> Weight {
        Weight::from_ref_time(0) // Standard Error: 305_000
            .saturating_add(Weight::from_ref_time(8_185_000).saturating_mul(c as u64)) // Standard Error: 76_000
            .saturating_add(Weight::from_ref_time(10_602_000).saturating_mul(v as u64)) // Standard Error: 5_000
            .saturating_add(Weight::from_ref_time(175_000).saturating_mul(e as u64))
            .saturating_add(T::DbWeight::get().reads(116))
            .saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(c as u64)))
            .saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(v as u64)))
            .saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(c as u64)))
    }
    fn election_phragmen_c_e(c: u32, e: u32) -> Weight {
        Weight::from_ref_time(5_716_841_000) // Standard Error: 293_000
            .saturating_add(Weight::from_ref_time(7_402_000).saturating_mul(c as u64)) // Standard Error: 4_000
            .saturating_add(Weight::from_ref_time(159_000).saturating_mul(e as u64))
            .saturating_add(T::DbWeight::get().reads(798))
            .saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(c as u64)))
            .saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(c as u64)))
    }
    fn election_phragmen_v(v: u32) -> Weight {
        Weight::from_ref_time(222_054_000) // Standard Error: 197_000
            .saturating_add(Weight::from_ref_time(9_600_000).saturating_mul(v as u64))
            .saturating_add(T::DbWeight::get().reads(37))
            .saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(v as u64)))
            .saturating_add(T::DbWeight::get().writes(17))
    }
}

// For backwards compatibility and tests
impl WeightInfo for () {
    fn vote_equal(v: u32) -> Weight {
        Weight::from_ref_time(24_712_000) // Standard Error: 6_000
            .saturating_add(Weight::from_ref_time(78_000).saturating_mul(v as u64))
            .saturating_add(RocksDbWeight::get().reads(5))
            .saturating_add(RocksDbWeight::get().writes(2))
    }
    fn vote_more(v: u32) -> Weight {
        Weight::from_ref_time(31_266_000) // Standard Error: 9_000
            .saturating_add(Weight::from_ref_time(103_000).saturating_mul(v as u64))
            .saturating_add(RocksDbWeight::get().reads(5))
            .saturating_add(RocksDbWeight::get().writes(2))
    }
    fn vote_less(v: u32) -> Weight {
        Weight::from_ref_time(30_689_000) // Standard Error: 6_000
            .saturating_add(Weight::from_ref_time(169_000).saturating_mul(v as u64))
            .saturating_add(RocksDbWeight::get().reads(5))
            .saturating_add(RocksDbWeight::get().writes(2))
    }
    fn remove_voter() -> Weight {
        Weight::from_ref_time(30_000_000)
            .saturating_add(RocksDbWeight::get().reads(2))
            .saturating_add(RocksDbWeight::get().writes(2))
    }
    fn submit_candidacy(c: u32) -> Weight {
        Weight::from_ref_time(26_966_000) // Standard Error: 4_000
            .saturating_add(Weight::from_ref_time(179_000).saturating_mul(c as u64))
            .saturating_add(RocksDbWeight::get().reads(4))
            .saturating_add(RocksDbWeight::get().writes(1))
    }
    fn renounce_candidacy_candidate(c: u32) -> Weight {
        Weight::from_ref_time(27_349_000) // Standard Error: 2_000
            .saturating_add(Weight::from_ref_time(54_000).saturating_mul(c as u64))
            .saturating_add(RocksDbWeight::get().reads(1))
            .saturating_add(RocksDbWeight::get().writes(1))
    }
    fn renounce_candidacy_members() -> Weight {
        Weight::from_ref_time(33_000_000)
            .saturating_add(RocksDbWeight::get().reads(4))
            .saturating_add(RocksDbWeight::get().writes(4))
    }
    fn renounce_candidacy_runners_up() -> Weight {
        Weight::from_ref_time(25_000_000)
            .saturating_add(RocksDbWeight::get().reads(1))
            .saturating_add(RocksDbWeight::get().writes(1))
    }
    fn remove_member_without_replacement() -> Weight {
        Weight::from_ref_time(1_000_000_000_000)
    }
    fn remove_member_with_replacement() -> Weight {
        Weight::from_ref_time(39_000_000)
            .saturating_add(RocksDbWeight::get().reads(5))
            .saturating_add(RocksDbWeight::get().writes(5))
    }
    fn clean_defunct_voters(v: u32, _d: u32) -> Weight {
        Weight::from_ref_time(0) // Standard Error: 231_000
            .saturating_add(Weight::from_ref_time(30_349_000).saturating_mul(v as u64))
            .saturating_add(RocksDbWeight::get().reads(4))
            .saturating_add(RocksDbWeight::get().reads((3 as u64).saturating_mul(v as u64)))
            .saturating_add(RocksDbWeight::get().writes((3 as u64).saturating_mul(v as u64)))
    }
    fn election_phragmen(c: u32, v: u32, e: u32) -> Weight {
        Weight::from_ref_time(0) // Standard Error: 305_000
            .saturating_add(Weight::from_ref_time(8_185_000).saturating_mul(c as u64)) // Standard Error: 76_000
            .saturating_add(Weight::from_ref_time(10_602_000).saturating_mul(v as u64)) // Standard Error: 5_000
            .saturating_add(Weight::from_ref_time(175_000).saturating_mul(e as u64))
            .saturating_add(RocksDbWeight::get().reads(116))
            .saturating_add(RocksDbWeight::get().reads((1 as u64).saturating_mul(c as u64)))
            .saturating_add(RocksDbWeight::get().reads((1 as u64).saturating_mul(v as u64)))
            .saturating_add(RocksDbWeight::get().writes((1 as u64).saturating_mul(c as u64)))
    }
    fn election_phragmen_c_e(c: u32, e: u32) -> Weight {
        Weight::from_ref_time(5_716_841_000) // Standard Error: 293_000
            .saturating_add(Weight::from_ref_time(7_402_000).saturating_mul(c as u64)) // Standard Error: 4_000
            .saturating_add(Weight::from_ref_time(159_000).saturating_mul(e as u64))
            .saturating_add(RocksDbWeight::get().reads(798))
            .saturating_add(RocksDbWeight::get().reads((1 as u64).saturating_mul(c as u64)))
            .saturating_add(RocksDbWeight::get().writes((1 as u64).saturating_mul(c as u64)))
    }
    fn election_phragmen_v(v: u32) -> Weight {
        Weight::from_ref_time(222_054_000) // Standard Error: 197_000
            .saturating_add(Weight::from_ref_time(9_600_000).saturating_mul(v as u64))
            .saturating_add(RocksDbWeight::get().reads(37))
            .saturating_add(RocksDbWeight::get().reads((1 as u64).saturating_mul(v as u64)))
            .saturating_add(RocksDbWeight::get().writes(17))
    }
}
